{"remainingRequest":"/media/batman/New Volume1/Projects/Vue/vueFancyQuiz/node_modules/babel-loader/lib/index.js!/media/batman/New Volume1/Projects/Vue/vueFancyQuiz/node_modules/cache-loader/dist/cjs.js??ref--0-0!/media/batman/New Volume1/Projects/Vue/vueFancyQuiz/node_modules/vue-loader/lib/index.js??vue-loader-options!/media/batman/New Volume1/Projects/Vue/vueFancyQuiz/src/components/QuestionBox.vue?vue&type=script&lang=js&","dependencies":[{"path":"/media/batman/New Volume1/Projects/Vue/vueFancyQuiz/src/components/QuestionBox.vue","mtime":1557511873107},{"path":"/media/batman/New Volume1/Projects/Vue/vueFancyQuiz/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/batman/New Volume1/Projects/Vue/vueFancyQuiz/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/media/batman/New Volume1/Projects/Vue/vueFancyQuiz/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/batman/New Volume1/Projects/Vue/vueFancyQuiz/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _toConsumableArray from \"/media/batman/New Volume1/Projects/Vue/vueFancyQuiz/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport _ from 'lodash';\nexport default {\n  props: {\n    currentQuestion: Object,\n    next: Function,\n    increment: Function\n  },\n  data: function data() {\n    return {\n      selectedIndex: null,\n      correctIndex: null,\n      shuffledAnswers: [],\n      answered: false,\n      numTotal: 0\n    };\n  },\n  computed: {\n    answers: function answers() {\n      var answers = _toConsumableArray(this.currentQuestion.incorrect_answers);\n\n      answers.push(this.currentQuestion.correct_answer);\n      return this.shuffledAnswers;\n    }\n  },\n  watch: {\n    currentQuestion: {\n      immediate: true,\n      handler: function handler() {\n        this.selectedIndex = null;\n        this.answered = false;\n        this.shuffleAnswers();\n      }\n    }\n  },\n  methods: {\n    selectAnswer: function selectAnswer(index) {\n      this.selectedIndex = index;\n    },\n    submitAnswer: function submitAnswer() {\n      var isCorrect = false;\n\n      if (this.selectedIndex === this.correctIndex) {\n        isCorrect = true;\n      }\n\n      this.answered = true;\n      this.numTotal++;\n      this.increment(isCorrect);\n    },\n    shuffleAnswers: function shuffleAnswers() {\n      var answers = [].concat(_toConsumableArray(this.currentQuestion.incorrect_answers), [this.currentQuestion.correct_answer]);\n      this.shuffledAnswers = _.shuffle(answers);\n      this.correctIndex = this.shuffledAnswers.indexOf(this.currentQuestion.correct_answer);\n    },\n    answerClass: function answerClass(index) {\n      var answerClass = '';\n\n      if (!this.answered && this.selectedIndex === index) {\n        answerClass = 'selected';\n      } else if (this.answered && this.correctIndex === index) {\n        answerClass = 'correct';\n      } else if (this.answered && this.selectedIndex === index && this.correctIndex !== index) {\n        answerClass = 'incorrect';\n      }\n\n      return answerClass;\n    }\n  }\n};",{"version":3,"sources":["QuestionBox.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA,OAAA,CAAA,MAAA,QAAA;AAEA,eAAA;AACA,EAAA,KAAA,EAAA;AACA,IAAA,eAAA,EAAA,MADA;AAEA,IAAA,IAAA,EAAA,QAFA;AAGA,IAAA,SAAA,EAAA;AAHA,GADA;AAMA,EAAA,IAAA,EAAA,gBAAA;AACA,WAAA;AACA,MAAA,aAAA,EAAA,IADA;AAEA,MAAA,YAAA,EAAA,IAFA;AAGA,MAAA,eAAA,EAAA,EAHA;AAIA,MAAA,QAAA,EAAA,KAJA;AAKA,MAAA,QAAA,EAAA;AALA,KAAA;AAOA,GAdA;AAeA,EAAA,QAAA,EAAA;AACA,IAAA,OADA,qBACA;AACA,UAAA,OAAA,sBAAA,KAAA,eAAA,CAAA,iBAAA,CAAA;;AACA,MAAA,OAAA,CAAA,IAAA,CAAA,KAAA,eAAA,CAAA,cAAA;AACA,aAAA,KAAA,eAAA;AACA;AALA,GAfA;AAsBA,EAAA,KAAA,EAAA;AACA,IAAA,eAAA,EAAA;AACA,MAAA,SAAA,EAAA,IADA;AAEA,MAAA,OAFA,qBAEA;AACA,aAAA,aAAA,GAAA,IAAA;AACA,aAAA,QAAA,GAAA,KAAA;AACA,aAAA,cAAA;AACA;AANA;AADA,GAtBA;AAgCA,EAAA,OAAA,EAAA;AACA,IAAA,YADA,wBACA,KADA,EACA;AACA,WAAA,aAAA,GAAA,KAAA;AACA,KAHA;AAIA,IAAA,YAJA,0BAIA;AACA,UAAA,SAAA,GAAA,KAAA;;AAEA,UAAA,KAAA,aAAA,KAAA,KAAA,YAAA,EAAA;AACA,QAAA,SAAA,GAAA,IAAA;AACA;;AACA,WAAA,QAAA,GAAA,IAAA;AACA,WAAA,QAAA;AAEA,WAAA,SAAA,CAAA,SAAA;AACA,KAdA;AAeA,IAAA,cAfA,4BAeA;AACA,UAAA,OAAA,gCAAA,KAAA,eAAA,CAAA,iBAAA,IAAA,KAAA,eAAA,CAAA,cAAA,EAAA;AACA,WAAA,eAAA,GAAA,CAAA,CAAA,OAAA,CAAA,OAAA,CAAA;AACA,WAAA,YAAA,GAAA,KAAA,eAAA,CAAA,OAAA,CAAA,KAAA,eAAA,CAAA,cAAA,CAAA;AACA,KAnBA;AAoBA,IAAA,WApBA,uBAoBA,KApBA,EAoBA;AACA,UAAA,WAAA,GAAA,EAAA;;AACA,UAAA,CAAA,KAAA,QAAA,IAAA,KAAA,aAAA,KAAA,KAAA,EAAA;AACA,QAAA,WAAA,GAAA,UAAA;AACA,OAFA,MAEA,IAAA,KAAA,QAAA,IAAA,KAAA,YAAA,KAAA,KAAA,EAAA;AACA,QAAA,WAAA,GAAA,SAAA;AACA,OAFA,MAEA,IAAA,KAAA,QAAA,IACA,KAAA,aAAA,KAAA,KADA,IAEA,KAAA,YAAA,KAAA,KAFA,EAGA;AACA,QAAA,WAAA,GAAA,WAAA;AACA;;AACA,aAAA,WAAA;AACA;AAjCA;AAhCA,CAAA","sourcesContent":["<template>\n    <div class=\"question-box-container\">\n        <b-jumbotron>\n           \n            <template slot=\"lead\">\n             {{ currentQuestion.question}}\n            </template>\n\n            <hr class=\"my-4\">\n\n            <b-list-group>\n                <b-list-group-item\n                v-for=\"(answer, index) in answers\"\n                :key=\"index\"\n                @click=\"selectAnswer(index)\"\n                :class=\"answerClass(index)\"\n                >\n                    {{ answer }}\n                </b-list-group-item>\n            </b-list-group>\n\n            <b-button \n            variant=\"primary\"\n            @click=\"submitAnswer\"\n            :disabled=\"selectedIndex === null || answered\"\n            >\n                Submit\n            </b-button>\n            <b-button @click=\"next\" variant=\"success\" \n            :disabled=\"numTotal === 10\"\n            href=\"#\">\n                Next\n            </b-button>\n        </b-jumbotron>\n    </div>\n</template>\n\n<script>\nimport _ from 'lodash'\n\nexport default {\n    props: {\n        currentQuestion: Object,\n        next: Function,\n        increment: Function\n    },\n    data: function() {\n        return {\n            selectedIndex: null,\n            correctIndex: null,\n            shuffledAnswers: [],\n            answered: false,\n            numTotal: 0\n        }\n    },\n    computed: {\n        answers() {\n            let answers = [...this.currentQuestion.incorrect_answers]\n            answers.push(this.currentQuestion.correct_answer)\n            return this.shuffledAnswers\n        }\n    },\n    watch: {\n        currentQuestion: {\n            immediate: true,\n            handler() {\n                this.selectedIndex = null;\n                this.answered = false\n                this.shuffleAnswers()\n            }\n        }\n    },\n    methods: {\n        selectAnswer(index) {\n            this.selectedIndex = index\n        },\n        submitAnswer() {\n            let isCorrect = false\n\n            if(this.selectedIndex === this.correctIndex ) {\n                isCorrect = true\n            }\n            this.answered = true\n            this.numTotal++\n\n            this.increment(isCorrect)\n        },\n        shuffleAnswers() {\n            let answers = [...this.currentQuestion.incorrect_answers, this.currentQuestion.correct_answer]\n            this.shuffledAnswers = _.shuffle(answers)\n            this.correctIndex = this.shuffledAnswers.indexOf(this.currentQuestion.correct_answer)\n        },\n        answerClass(index) {\n            let answerClass = ''\n            if (!this.answered && this.selectedIndex === index) {\n                answerClass = 'selected'\n            } else if (this.answered && this.correctIndex === index) {\n                answerClass = 'correct'\n            } else if (this.answered &&\n                this.selectedIndex === index &&\n                this.correctIndex !== index\n            ) {\n                answerClass = 'incorrect'\n            }\n            return answerClass\n        }\n    }\n}\n</script>\n\n<style scoped>\n.list-group{\n    margin-bottom: 15px;\n}\n.list-group-item:hover{\n    background: #EEE;\n    cursor: pointer;\n}\n.btn{\n    margin: 0 5px;\n}\n.selected{\n    background-color: lightblue;\n}\n.correct{\n    background-color: lightgreen;\n}\n.incorrect{\n    background-color: red;\n}\n</style>\n"],"sourceRoot":"src/components"}]}